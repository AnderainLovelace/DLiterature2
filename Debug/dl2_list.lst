SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 12-Aug-2012 14:12:00  PAGE    1

************ OBJECT LISTING ************

FILE NAME: D:\Anderain\fx-9860\DL2\dl2_list.c

SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

      dl2_list.c     1    #include "dl2_all.h"
      dl2_list.c     2    
      dl2_list.c     3    void list_init (list * l)
P   00000000              _list_init:                      ; function: list_init
                                                           ; frame size=0
      dl2_list.c     4    {
      dl2_list.c     5            l->head = NULL;
    00000000 E500                   MOV         #0,R5
    00000002 2452                   MOV.L       R5,@R4
      dl2_list.c     6            l->last = NULL;
    00000004 1451                   MOV.L       R5,@(4,R4)
      dl2_list.c     7            l->size = 0;
      dl2_list.c     8    }
    00000006 000B                   RTS
    00000008 1452                   MOV.L       R5,@(8,R4)
      dl2_list.c     9    
      dl2_list.c    10    void list_destory (list * l)
    0000000A              _list_destory:                   ; function: list_destory
                                                           ; frame size=16
    0000000A 2FE6                   MOV.L       R14,@-R15
    0000000C 2FD6                   MOV.L       R13,@-R15
    0000000E 6D43                   MOV         R4,R13
    00000010 2FC6                   MOV.L       R12,@-R15
    00000012 4F22                   STS.L       PR,@-R15
    00000014 DC1B                   MOV.L       L394,R12   ; _free
      dl2_list.c    11    {
      dl2_list.c    12            node *line1,*line2;
      dl2_list.c    13    
      dl2_list.c    14            line1 = l->head;
      dl2_list.c    15            
      dl2_list.c    16            while (line1)
    00000016 A003                   BRA         L390
    00000018 6ED2                   MOV.L       @R13,R14
    0000001A              L391:                             
      dl2_list.c    17            {
      dl2_list.c    18                    line2 = line1;
    0000001A 64E3                   MOV         R14,R4
      dl2_list.c    19                    line1 = line1->next ;
      dl2_list.c    20    
      dl2_list.c    21                    free (line2);
    0000001C 4C0B                   JSR         @R12
    0000001E 5EE6                   MOV.L       @(24,R14),R14
    00000020              L390:                             
    00000020 2EE8                   TST         R14,R14
    00000022 8BFA                   BF          L391
      dl2_list.c    22            }
      dl2_list.c    23    
      dl2_list.c    24            l->head = l->last = NULL;
    00000024 E400                   MOV         #0,R4
    00000026 1D41                   MOV.L       R4,@(4,R13)
    00000028 2D42                   MOV.L       R4,@R13
      dl2_list.c    25            l->size = 0;
    0000002A 1D42                   MOV.L       R4,@(8,R13)
      dl2_list.c    26    }




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 12-Aug-2012 14:12:00  PAGE    2


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    0000002C 4F26                   LDS.L       @R15+,PR
    0000002E 6CF6                   MOV.L       @R15+,R12
    00000030 6DF6                   MOV.L       @R15+,R13
    00000032 000B                   RTS
    00000034 6EF6                   MOV.L       @R15+,R14
      dl2_list.c    27    
      dl2_list.c    28    void list_push (list * l,const char * str)
    00000036              _list_push:                      ; function: list_push
                                                           ; frame size=16
                                                           ; used runtime library name:
                                                           ; __slow_strcpy
    00000036 2FE6                   MOV.L       R14,@-R15
    00000038 2F86                   MOV.L       R8,@-R15
    0000003A 6E43                   MOV         R4,R14
    0000003C 4F22                   STS.L       PR,@-R15
    0000003E 7FFC                   ADD         #-4,R15
    00000040 2F52                   MOV.L       R5,@R15
      dl2_list.c    29    {
      dl2_list.c    30            if (l->size == 0)
    00000042 53E2                   MOV.L       @(8,R14),R3
    00000044 2338                   TST         R3,R3
    00000046 8B07                   BF          L392
      dl2_list.c    31            {
      dl2_list.c    32                    l->head                 = (node*)calloc(sizeof(node),1);
    00000048 D30F                   MOV.L       L394+4,R3  ; _calloc
    0000004A E501                   MOV         #1,R5
    0000004C 430B                   JSR         @R3
    0000004E E41C                   MOV         #28,R4
    00000050 2E02                   MOV.L       R0,@R14
      dl2_list.c    33                    l->last                 = l->head;
    00000052 6203                   MOV         R0,R2
    00000054 A00A                   BRA         L393
    00000056 1E01                   MOV.L       R0,@(4,R14)
    00000058              L392:                             
      dl2_list.c    34            }
      dl2_list.c    35            else
      dl2_list.c    36            {
      dl2_list.c    37                    l->last->next   = (node*)calloc(sizeof(node),1);
    00000058 58E1                   MOV.L       @(4,R14),R8
    0000005A E501                   MOV         #1,R5
    0000005C D30A                   MOV.L       L394+4,R3  ; _calloc
    0000005E 7818                   ADD         #24,R8
    00000060 430B                   JSR         @R3
    00000062 E41C                   MOV         #28,R4
    00000064 2802                   MOV.L       R0,@R8
      dl2_list.c    38                    l->last                 = l->last->next;
    00000066 53E1                   MOV.L       @(4,R14),R3
    00000068 5236                   MOV.L       @(24,R3),R2
    0000006A 1E21                   MOV.L       R2,@(4,R14)
    0000006C              L393:                             
      dl2_list.c    39            }
      dl2_list.c    40    
      dl2_list.c    41            strcpy(l->last->str,str);
    0000006C 50E1                   MOV.L       @(4,R14),R0
    0000006E D307                   MOV.L       L394+8,R3  ; __slow_strcpy
    00000070 430B                   JSR         @R3
    00000072 61F2                   MOV.L       @R15,R1




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 12-Aug-2012 14:12:00  PAGE    3


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

      dl2_list.c    42    
      dl2_list.c    43            l->size ++;
    00000074 52E2                   MOV.L       @(8,R14),R2
    00000076 7201                   ADD         #1,R2
    00000078 1E22                   MOV.L       R2,@(8,R14)
      dl2_list.c    44    
      dl2_list.c    45    }
    0000007A 7F04                   ADD         #4,R15
    0000007C 4F26                   LDS.L       @R15+,PR
    0000007E 68F6                   MOV.L       @R15+,R8
    00000080 000B                   RTS
    00000082 6EF6                   MOV.L       @R15+,R14
    00000084              L394:                             
    00000084 <00000000>             .DATA.L     _free
    00000088 <00000000>             .DATA.L     _calloc
    0000008C <00000000>             .DATA.L     __slow_strcpy
      dl2_list.c    46    












































SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 12-Aug-2012 14:12:00  PAGE    1


******** STATISTICS INFORMATION ********


********** ERROR INFORMATION ***********

NUMBER OF ERRORS:           0
NUMBER OF WARNINGS:         0




******* SOURCE LINE INFORMATION ********

COMPILED SOURCE LINE:       46



******* SECTION SIZE INFORMATION *******

PROGRAM  SECTION (P):                               00000090 Byte(s)
CONSTANT SECTION (C):                               00000000 Byte(s)
DATA     SECTION (D):                               00000000 Byte(s)
BSS      SECTION (B):                               00000000 Byte(s)

 TOTAL PROGRAM SIZE: 00000090 Byte(s)



********** LABEL INFORMATION ***********

NUMBER OF EXTERNAL REFERENCE SYMBOLS:            3
NUMBER OF EXTERNAL DEFINITION SYMBOLS:           3
NUMBER OF INTERNAL/EXTERNAL SYMBOLS:            11






























*** COMMAND PARAMETER ***


  -subcommand=C:\DOCUME~1\ADMINI~1\LOCALS~1\Temp\hmk232.tmp 

